#![allow(
    clippy::excessive_precision,
    clippy::unreadable_literal,
    clippy::uninit_assumed_init
)]

use std::borrow::Borrow;
use std::mem::MaybeUninit;
use std::ops::{Add, AddAssign, Deref, DerefMut};

use super::common::{Integrand, Interval};
use super::qk_impl::qk;

/// holds the result of Gauss-Kronrod integration
#[derive(Debug)]
#[doc(hidden)]
pub struct QKResult {
    /// approximation to the integral
    pub estimate: f64,
    /// estimate of the modulus of the absolute error
    pub delta: f64,
    /// approximation to the integral of |f|
    pub absvalue: f64,
    /// approximation to the integral of |f - quad(f)/(b - a)|
    pub asc: f64,
}

impl<T: Borrow<QKResult>> Add<T> for QKResult {
    type Output = QKResult;

    #[inline]
    fn add(self, other: T) -> QKResult {
        let other = other.borrow();
        QKResult {
            estimate: self.estimate + other.estimate,
            delta: self.delta + other.delta,
            absvalue: self.absvalue + other.absvalue,
            asc: self.asc + other.asc,
        }
    }
}

impl<T: Borrow<QKResult>> AddAssign<T> for QKResult {
    #[inline]
    fn add_assign(&mut self, other: T) {
        let other = other.borrow();
        self.estimate += other.estimate;
        self.delta += other.delta;
        self.absvalue += other.absvalue;
        self.asc += other.asc;
    }
}

#[repr(align(32))]
struct Aligned<T: ?Sized> {
    value: T,
}

impl<T: Sized> Aligned<T> {
    #[inline]
    unsafe fn uninit() -> Self {
        MaybeUninit::uninit().assume_init()
    }
}

impl<T: ?Sized> Deref for Aligned<T> {
    type Target = T;

    #[inline]
    fn deref(&self) -> &T {
        &self.value
    }
}

impl<T: ?Sized> DerefMut for Aligned<T> {
    #[inline]
    fn deref_mut(&mut self) -> &mut T {
        &mut self.value
    }
}

/// Performs Gauss-Kronrod integration with 15-point kronrod rule
#[inline]
pub fn qk15<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 15]>::uninit();
        qk(f, r, &XGK15, &WG15, &WGK15, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 21-point kronrod rule
#[inline]
pub fn qk17<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 17]>::uninit();
        qk(f, r, &XGK17, &WG17, &WGK17, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 21-point kronrod rule
#[inline]
pub fn qk21<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 21]>::uninit();
        qk(f, r, &XGK21, &WG21, &WGK21, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 21-point kronrod rule
#[inline]
pub fn qk25<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 25]>::uninit();
        qk(f, r, &XGK25, &WG25, &WGK25, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 31-point kronrod rule
#[inline]
pub fn qk31<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 31]>::uninit();
        qk(f, r, &XGK31, &WG31, &WGK31, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 31-point kronrod rule
#[inline]
pub fn qk33<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 31]>::uninit();
        qk(f, r, &XGK33, &WG33, &WGK33, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 41-point kronrod rule
#[inline]
pub fn qk41<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 41]>::uninit();
        qk(f, r, &XGK41, &WG41, &WGK41, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 41-point kronrod rule
#[inline]
pub fn qk49<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 41]>::uninit();
        qk(f, r, &XGK49, &WG49, &WGK49, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 51-point kronrod rule
#[inline]
pub fn qk51<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 51]>::uninit();
        qk(f, r, &XGK51, &WG51, &WGK51, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 51-point kronrod rule
#[inline]
pub fn qk57<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = Aligned::<[f64; 57]>::uninit();
        qk(f, r, &XGK57, &WG57, &WGK57, &mut *fv)
    }
}

/// Performs Gauss-Kronrod integration with 61-point kronrod rule
#[inline]
pub fn qk61<F: Integrand>(f: &mut F, r: &Interval) -> QKResult {
    unsafe {
        let mut fv = MaybeUninit::<[f64; 61]>::uninit().assume_init();
        qk(f, r, &XGK61, &WG61, &WGK61, &mut fv)
    }
}

/// abscissae of the 15-point kronrod rule
const XGK15: [f64; 8] = [
    0.000000000000000000000000000000000,
    0.207784955007898467600689403773245,
    0.405845151377397166906606412076961,
    0.586087235467691130294144838258730,
    0.741531185599394439863864773280788,
    0.864864423359769072789712788640926,
    0.949107912342758524526189684047851,
    0.991455371120812639206854697526329,
];

/// weights of the 7-point gauss rule
const WG15: [f64; 4] = [
    0.417959183673469387755102040816327,
    0.381830050505118944950369775488975,
    0.279705391489276667901467771423780,
    0.129484966168869693270611432679082,
];

/// weights of the 15-point kronrod rule
const WGK15: [f64; 8] = [
    0.209482141084727828012999174891714,
    0.204432940075298892414161999234649,
    0.190350578064785409913256402421014,
    0.169004726639267902826583426598550,
    0.140653259715525918745189590510238,
    0.104790010322250183839876322541518,
    0.063092092629978553290700663189204,
    0.022935322010529224963732008058970,
];

const XGK17: [f64; 9] = [
    0.000000000000000000000000000000000,
    0.183434642495649804939476142360184,
    0.360701097928131957192548622296891,
    0.525532409916328985817739049189246,
    0.672354070945158677156310738092831,
    0.796666477413626739591553936475830,
    0.894120906847456421948361017538251,
    0.960289856497536231683560868569473,
    0.993379875881716155935888069019671,
];

const WG17: [f64; 4] = [
    0.362683783378361982965150449277196,
    0.313706645877887287337962201986601,
    0.222381034453374470544355994426241,
    0.101228536290376259152531354309962,
];

const WGK17: [f64; 9] = [
    0.184446405744691643528970955705643,
    0.181400025068034643061748525172550,
    0.172070608555211311857294880203857,
    0.156652606168188400490248088486969,
    0.136263109255172215262338745254506,
    0.111646370826839613222108158933941,
    0.082482298931358330688625193445608,
    0.049439395002139308500363969446998,
    0.017822383320710355152786961202750,
];

/// abscissae of the 21-point kronrod rule
const XGK21: [f64; 11] = [
    0.000000000000000000000000000000000,
    0.148874338981631210884826001129720,
    0.294392862701460198131126603103866,
    0.433395394129247190799265943165784,
    0.562757134668604683339000099272694,
    0.679409568299024406234327365114874,
    0.780817726586416897063717578345042,
    0.865063366688984510732096688423493,
    0.930157491355708226001207180059508,
    0.973906528517171720077964012084452,
    0.995657163025808080735527280689003,
];

/// weights of the 10-point gauss rule
const WG21: [f64; 5] = [
    0.295524224714752870173892994651338,
    0.269266719309996355091226921569469,
    0.219086362515982043995534934228163,
    0.149451349150580593145776339657697,
    0.066671344308688137593568809893332,
];

/// weights of the 21-point kronrod rule
const WGK21: [f64; 11] = [
    0.149445554002916905664936468389821,
    0.147739104901338491374841515972068,
    0.142775938577060080797094273138717,
    0.134709217311473325928054001771707,
    0.123491976262065851077958109831074,
    0.109387158802297641899210590325805,
    0.093125454583697605535065465083366,
    0.075039674810919952767043140916190,
    0.054755896574351996031381300244580,
    0.032558162307964727478818972459390,
    0.011694638867371874278064396062192,
];

const XGK25: [f64; 13] = [
    0.000000000000000000000000000000000,
    0.125233408511468915472441369463853,
    0.248505748320469276267790960362718,
    0.367831498998180193752691536643718,
    0.481339450478157092935943615018832,
    0.587317954286617447296702418940534,
    0.684059895470055893944929100341155,
    0.769902674194304687036893833212818,
    0.843558124161153244792141885059839,
    0.904117256370474856678465866119096,
    0.950537795943121296549060195131619,
    0.981560634246719250690549090149281,
    0.996933922529595426912350237258385,
];

const WG25: [f64; 6] = [
    0.249147045813402785000562436042951,
    0.233492536538354808760849898924878,
    0.203167426723065921749064455809798,
    0.160078328543346226334652529543359,
    0.106939325995318430960254718193996,
    0.047175336386511827194615961485017,
];

const WGK25: [f64; 13] = [
    0.125556893905474335304296132860078,
    0.124584164536156073437312473209229,
    0.121626303523948383246099758091310,
    0.116712053501756826293580745305730,
    0.110022604977644072635907398742250,
    0.101649732279060277715688770491228,
    0.091549468295049210528171939739614,
    0.079920275333601701493392609529783,
    0.067250907050839930304940940047316,
    0.053697017607756251228889163320458,
    0.038915230469299477115089632285863,
    0.023036084038982232591084580367969,
    0.008257711433168395757693922439212,
];

/// abscissae of the 31-point kronrod rule
const XGK31: [f64; 16] = [
    0.000000000000000000000000000000000,
    0.101142066918717499027074231447392,
    0.201194093997434522300628303394596,
    0.299180007153168812166780024266389,
    0.394151347077563369897207370981045,
    0.485081863640239680693655740232351,
    0.570972172608538847537226737253911,
    0.650996741297416970533735895313275,
    0.724417731360170047416186054613938,
    0.790418501442465932967649294817947,
    0.848206583410427216200648320774217,
    0.897264532344081900882509656454496,
    0.937273392400705904307758947710209,
    0.967739075679139134257347978784337,
    0.987992518020485428489565718586613,
    0.998002298693397060285172840152271,
];

/// weights of the 15-point gauss rule
const WG31: [f64; 8] = [
    0.202578241925561272880620199967519,
    0.198431485327111576456118326443839,
    0.186161000015562211026800561866423,
    0.166269205816993933553200860481209,
    0.139570677926154314447804794511028,
    0.107159220467171935011869546685869,
    0.070366047488108124709267416450667,
    0.030753241996117268354628393577204,
];

/// weights of the 31-point kronrod rule
const WGK31: [f64; 16] = [
    0.101330007014791549017374792767493,
    0.100769845523875595044946662617570,
    0.099173598721791959332393173484603,
    0.096642726983623678505179907627589,
    0.093126598170825321225486872747346,
    0.088564443056211770647275443693774,
    0.083080502823133021038289247286104,
    0.076849680757720378894432777482659,
    0.069854121318728258709520077099147,
    0.062009567800670640285139230960803,
    0.053481524690928087265343147239430,
    0.044589751324764876608227299373280,
    0.035346360791375846222037948478360,
    0.025460847326715320186874001019653,
    0.015007947329316122538374763075807,
    0.005377479872923348987792051430128,
];

const XGK33: [f64; 17] = [
    0.000000000000000000000000000000000,
    0.095012509837637440185319335424958,
    0.189168579018083726314712086634942,
    0.281603550779258913230460501460496,
    0.371483780878416288684027947079523,
    0.458016777657227386342419442983578,
    0.540407676352139743625428344051591,
    0.617876244402643748446671764048791,
    0.689741106681762303876199858016583,
    0.755404408355003033895101194847442,
    0.814240287062444468094572577588398,
    0.865631202387831743880467897712393,
    0.909157667012342948622557332882809,
    0.944575023073232576077988415534608,
    0.971505950969392594304109858259183,
    0.989400934991649932596154173450333,
    0.998239274145444514183282371262429,
];

const WG33: [f64; 8] = [
    0.189450610455068496285396723208283,
    0.182603415044923588866763667969220,
    0.169156519395002538189312079030360,
    0.149595988816576732081501730547479,
    0.124628971255533872052476282192016,
    0.095158511682492784809925107602246,
    0.062253523938647892862843836994378,
    0.027152459411754094851780572456018,
];

const WGK33: [f64; 17] = [
    0.095154216080498307020415055955840,
    0.094728401247230041326733968799471,
    0.093438674060921230478147190079644,
    0.091292032828191662272226594165447,
    0.088337502579112731413574030468030,
    0.084595803792590637585459382901613,
    0.080053941263719286445983306344537,
    0.074769823885599557533866452931194,
    0.068862995191531243001306696674629,
    0.062358806011834855470397014742265,
    0.055205633095422172303120001393629,
    0.047506215976407017234986327394423,
    0.039512951202421964003078606929551,
    0.031260543647380528239661154138738,
    0.022498859440049444029474671942737,
    0.013257930688091157245432985393750,
    0.004742777049247317906344087722423,
];

/// abscissae of the 41-point kronrod rule
const XGK41: [f64; 21] = [
    0.000000000000000000000000000000000,
    0.076526521133497333754640409398838,
    0.152605465240922675505220241022678,
    0.227785851141645078080496195368575,
    0.301627868114913004320555356858592,
    0.373706088715419560672548177024927,
    0.443593175238725103199992213492640,
    0.510867001950827098004364050955251,
    0.575140446819710315342946036586425,
    0.636053680726515025452836696226286,
    0.693237656334751384805490711845932,
    0.746331906460150792614305070355642,
    0.795041428837551198350638833272788,
    0.839116971822218823394529061701521,
    0.878276811252281976077442995113078,
    0.912234428251325905867752441203298,
    0.940822633831754753519982722212443,
    0.963971927277913791267666131197277,
    0.981507877450250259193342994720217,
    0.993128599185094924786122388471320,
    0.998859031588277663838315576545863,
];

/// weights of the 20-point gauss rule
const WG41: [f64; 10] = [
    0.152753387130725850698084331955098,
    0.149172986472603746787828737001969,
    0.142096109318382051329298325067165,
    0.131688638449176626898494499748163,
    0.118194531961518417312377377711382,
    0.101930119817240435036750135480350,
    0.083276741576704748724758143222046,
    0.062672048334109063569506535187042,
    0.040601429800386941331039952274932,
    0.017614007139152118311861962351853,
];

/// weights of the 41-point kronrod rule
const WGK41: [f64; 21] = [
    0.076600711917999656445049901530102,
    0.076377867672080736705502835038061,
    0.075704497684556674659542775376617,
    0.074582875400499188986581418362488,
    0.073030690332786667495189417658913,
    0.071054423553444068305790361723210,
    0.068648672928521619345623411885368,
    0.065834597133618422111563556969398,
    0.062653237554781168025870122174255,
    0.059111400880639572374967220648594,
    0.055195105348285994744832372419777,
    0.050944573923728691932707670050345,
    0.046434821867497674720231880926108,
    0.041668873327973686263788305936895,
    0.036600169758200798030557240707211,
    0.031287306777032798958543119323801,
    0.025882133604951158834505067096153,
    0.020388373461266523598010231432755,
    0.014626169256971252983787960308868,
    0.008600269855642942198661787950102,
    0.003073583718520531501218293246031,
];

const XGK49: [f64; 25] = [
    0.000000000000000000000000000000000,
    0.064056892862605626085043082624745,
    0.127851240286216699326667098746182,
    0.191118867473616309158639820757070,
    0.253600430369677910537489448545236,
    0.315042679696163374386793291319810,
    0.375191154797950870412699517733197,
    0.433793507626045138487084231913350,
    0.490612365463446416038345668979945,
    0.545421471388839535658375617218372,
    0.597990513906078379703258534153066,
    0.648093651936975569252495786910748,
    0.695532072396778802461733300689389,
    0.740124191578554364243828103099978,
    0.781677226476464317170710943246370,
    0.820001985973902921953949872669745,
    0.854953803904051366827147029446991,
    0.886415527004401034213154341982197,
    0.914240690794911500874994145088397,
    0.938274552002732758523649001708722,
    0.958441684405209407000907641216486,
    0.974728555971309498198391993008169,
    0.987040496015809045661879675246613,
    0.995187219997021360179997409700737,
    0.999201056021875051655759554001639,
];

const WG49: [f64; 12] = [
    0.127938195346752156974056165224695,
    0.125837456346828296121375382511184,
    0.121670472927803391204463153476262,
    0.115505668053725601353344483906784,
    0.107444270115965634782577342446606,
    0.097618652104113888269880664464247,
    0.086190161531953275917185202983743,
    0.073346481411080305734033615253117,
    0.059298584915436780746367758500109,
    0.044277438817419806168602748211338,
    0.028531388628933663181307815951878,
    0.012341229799987199546805667070037,
];

const WGK49: [f64; 25] = [
    0.064100463769266717756751728006586,
    0.063969626241376347509644034120127,
    0.063574878712972420734803194875307,
    0.062917112269698113170570246311836,
    0.062004001419781273939901272164948,
    0.060838034873127860983583676308816,
    0.059416543245952097694404582907668,
    0.057748675375690034539937419561017,
    0.055851715103063319555227688826167,
    0.053727945501751317395127210655595,
    0.051371951383457638487252496393224,
    0.048801386753259051450053450726567,
    0.046045891776563833411740269972464,
    0.043105928193695268092760628613405,
    0.039967623893622181222630944362560,
    0.036658100242212953886971295722458,
    0.033227378319829572434321287452346,
    0.029671306090659117491311160688321,
    0.025951194661374106405563815993065,
    0.022104084900061889640191567506721,
    0.018231178550387270198471476568716,
    0.014327444630883845848554484407082,
    0.010259786409280761245641108764037,
    0.006025671015720143722039610063186,
    0.002152308550946222060921213031076,
];

/// abscissae of the 51-point kronrod rule
const XGK51: [f64; 26] = [
    0.000000000000000000000000000000000,
    0.061544483005685078886546392366797,
    0.122864692610710396387359818808037,
    0.183718939421048892015969888759528,
    0.243866883720988432045190362797452,
    0.303089538931107830167478909980339,
    0.361172305809387837735821730127641,
    0.417885382193037748851814394594572,
    0.473002731445714960522182115009192,
    0.526325284334719182599623778158010,
    0.577662930241222967723689841612654,
    0.626810099010317412788122681624518,
    0.673566368473468364485120633247622,
    0.717766406813084388186654079773298,
    0.759259263037357630577282865204361,
    0.797873797998500059410410904994307,
    0.833442628760834001421021108693570,
    0.865847065293275595448996969588340,
    0.894991997878275368851042006782805,
    0.920747115281701561746346084546331,
    0.942974571228974339414011169658471,
    0.961614986425842512418130033660167,
    0.976663921459517511498315386479594,
    0.988035794534077247637331014577406,
    0.995556969790498097908784946893902,
    0.999262104992609834193457486540341,
];

/// weights of the 25-point gauss rule
const WG51: [f64; 13] = [
    0.123176053726715451203902873079050,
    0.122242442990310041688959518945852,
    0.119455763535784772228178126512901,
    0.114858259145711648339325545869556,
    0.108519624474263653116093957050117,
    0.100535949067050644202206890392686,
    0.091028261982963649811497220702892,
    0.080140700335001018013234959669111,
    0.068038333812356917207187185656708,
    0.054904695975835191925936891540473,
    0.040939156701306312655623487711646,
    0.026354986615032137261901815295299,
    0.011393798501026287947902964113235,
];

/// weights of the 51-point kronrod rule
const WGK51: [f64; 26] = [
    0.061580818067832935078759824240066,
    0.061471189871425316661544131965264,
    0.061128509717053048305859030416293,
    0.060539455376045862945360267517565,
    0.059720340324174059979099291932562,
    0.058689680022394207961974175856788,
    0.057437116361567832853582693939506,
    0.055950811220412317308240686382747,
    0.054251129888545490144543370459876,
    0.052362885806407475864366712137873,
    0.050277679080715671963325259433440,
    0.047982537138836713906392255756915,
    0.045502913049921788909870584752660,
    0.042872845020170049476895792439495,
    0.040083825504032382074839284467076,
    0.037116271483415543560330625367620,
    0.034002130274329337836748795229551,
    0.030792300167387488891109020215229,
    0.027475317587851737802948455517811,
    0.024009945606953216220092489164881,
    0.020435371145882835456568292235939,
    0.016847817709128298231516667536336,
    0.013236229195571674813656405846976,
    0.009473973386174151607207710523655,
    0.005561932135356713758040236901066,
    0.001987383892330315926507851882843,
];

const XGK57: [f64; 29] = [
    0.000000000000000000000000000000000,
    0.055079289884034270426516527341880,
    0.109991649290732781027815261597935,
    0.164569282133380771281471777891166,
    0.218646765777540440144053724079084,
    0.272061627635178077676826356125770,
    0.324650637057820445835349056474133,
    0.376251516089078710221357209556087,
    0.426709291931107209807199466546646,
    0.475874224955118261034411847667434,
    0.523594465442833020107971645866323,
    0.569720471811401719308003283356431,
    0.614115617729884143662211574584255,
    0.656651094038864961219898176506743,
    0.697193171944897829505055730972558,
    0.735610878013631772028144510292534,
    0.771793447243433832029564566052428,
    0.805641370917179171447885955425278,
    0.837044208419339397285962669742181,
    0.865892522574395048942254567379687,
    0.892108688876811896164200241998283,
    0.915633026392132073869689423329927,
    0.936380950324850219172957334225778,
    0.954259280628938197254101839705216,
    0.969231347359594367303744365650804,
    0.981303165370872753694559945807830,
    0.990417243607036921336294784891355,
    0.996442497573954449950436390483311,
    0.999409527464458185430469787030878,
];

const WG57: [f64; 14] = [
    0.110047013016475196282376265601818,
    0.108711192258294135253571519303673,
    0.106055765922846417910416436996811,
    0.102112967578060769814216638505712,
    0.096930657997929915850489006095441,
    0.090571744393032840942186031336784,
    0.083113417228901218390396498244333,
    0.074646214234568779023931887173022,
    0.065272923966999595793397566775505,
    0.055107345675716745431482918226946,
    0.044272934759004227839587877653207,
    0.032901427782304379977630819170532,
    0.021132112592771259751500380993265,
    0.009124282593094517738816153922952,
];

const WGK57: [f64; 29] = [
    0.055107015299777746735626928438028,
    0.055023774809077271036502426453062,
    0.054772896844694716781166407068630,
    0.054354779876438122260022699069615,
    0.053773208209074282641162579514825,
    0.053029282478558707298691878688410,
    0.052121534240287052656082768398714,
    0.051054436965688590212331950140192,
    0.049836344907779101814673159246887,
    0.048468123831894560567113837884255,
    0.046947174743596009055304775696875,
    0.045282174971778382486767178658076,
    0.043486965463534754692944745996740,
    0.041561540422930381801750249005773,
    0.039500362038311021057620614398857,
    0.037316775066018058570339309681710,
    0.035032322351843966845355051650711,
    0.032644878891020445408809034380568,
    0.030141813915294599687594330310677,
    0.027542140838783441549627331827396,
    0.024881274360962674794539591845302,
    0.022153023381841145404571370933566,
    0.019325780376825872893481336671039,
    0.016424885799840213021325411478851,
    0.0135226653313631482127563325315156,
    0.010611858842171326615101945569492,
    0.007590801053104039604902428847390,
    0.004454936296692426768597724116182,
    0.001590736040706812893050065715678,
];

/// abscissae of the 61-point kronrod rule
const XGK61: [f64; 31] = [
    0.000000000000000000000000000000000,
    0.051471842555317695833025213166723,
    0.102806937966737030147096751318001,
    0.153869913608583546963794672743256,
    0.204525116682309891438957671002025,
    0.254636926167889846439805129817805,
    0.304073202273625077372677107199257,
    0.352704725530878113471037207089374,
    0.400401254830394392535476211542661,
    0.447033769538089176780609900322854,
    0.492480467861778574993693061207709,
    0.536624148142019899264169793311073,
    0.579345235826361691756024932172540,
    0.620526182989242861140477556431189,
    0.660061064126626961370053668149271,
    0.697850494793315796932292388026640,
    0.733790062453226804726171131369528,
    0.767777432104826194917977340974503,
    0.799727835821839083013668942322683,
    0.829565762382768397442898119732502,
    0.857205233546061098958658510658944,
    0.882560535792052681543116462530226,
    0.905573307699907798546522558925958,
    0.926200047429274325879324277080474,
    0.944374444748559979415831324037439,
    0.960021864968307512216871025581798,
    0.973116322501126268374693868423707,
    0.983668123279747209970032581605663,
    0.991630996870404594858628366109486,
    0.996893484074649540271630050918695,
    0.999484410050490637571325895705811,
];

/// weights of the 30-point gauss rule
const WG61: [f64; 15] = [
    0.102852652893558840341285636705415,
    0.101762389748405504596428952168554,
    0.099593420586795267062780282103569,
    0.096368737174644259639468626351810,
    0.092122522237786128717632707087619,
    0.086899787201082979802387530715126,
    0.080755895229420215354694938460530,
    0.073755974737705206268243850022191,
    0.065974229882180495128128515115962,
    0.057493156217619066481721689402056,
    0.048402672830594052902938140422808,
    0.038799192569627049596801936446348,
    0.028784707883323369349719179611292,
    0.018466468311090959142302131912047,
    0.007968192496166605615465883474674,
];

/// weights of the 61-point kronrod rule
const WGK61: [f64; 31] = [
    0.051494729429451567558340433647099,
    0.051426128537459025933862879215781,
    0.051221547849258772170656282604944,
    0.050881795898749606492297473049805,
    0.050405921402782346840893085653585,
    0.049795683427074206357811569379942,
    0.049055434555029778887528165367238,
    0.048185861757087129140779492298305,
    0.047185546569299153945261478181099,
    0.046059238271006988116271735559374,
    0.044814800133162663192355551616723,
    0.043452539701356069316831728117073,
    0.041969810215164246147147541285970,
    0.040374538951535959111995279752468,
    0.038678945624727592950348651532281,
    0.036882364651821229223911065617136,
    0.034979338028060024137499670731468,
    0.032981447057483726031814191016854,
    0.030907257562387762472884252943092,
    0.028754048765041292843978785354334,
    0.026509954882333101610601709335075,
    0.024191162078080601365686370725232,
    0.021828035821609192297167485738339,
    0.019414141193942381173408951050128,
    0.016920889189053272627572289420322,
    0.014369729507045804812451432443580,
    0.011823015253496341742232898853251,
    0.009273279659517763428441146892024,
    0.006630703915931292173319826369750,
    0.003890461127099884051267201844516,
    0.001389013698677007624551591226760,
];
